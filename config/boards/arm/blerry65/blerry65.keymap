#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

// See: layout.h for layout options

/ {
	keymap {
		compatible = "zmk,keymap";
  
		default_layer {
// -----------------------------------------------------------------------------------------
//   | ESC   | 1     | 2     | 3     | 4     | 5     | 6     | 7     | 8     | 9     | 0     | -     | =     | BACKSPACE     | HOME   |
//   | TAB   | Q     | W     | E     | R     | T     | Y     | U     | I     | O     | P     | [     | ]     | \             | END    |
//   | CAPS  | A     | S     | D     | F     | G     | H     | J     | K     | L     | ;     | '     |         ENTER         | PG UP  |
//   | SHIFT | Z     | X     | C     | V     | B     | N     | M     | ,     | .     | /     |         SHIFT        | UP     | PG DN  |
//   | CTRL  | GUI   | ALT   |                 SPACE                                 | ALT   | FN    |         LEFT | DOWN   | RIGHT  |

			bindings = <
    &kp ESC          &kp NUM_1        &kp NUM_2     &kp NUM_3     &kp NUM_4     &kp NUM_5        &kp NUM_6        &kp NUM_7        &kp NUM_8        &kp NUM_9        &kp NUM_0        &kp MINUS        &kp EQL          &kp BSPC         &kp PSCRN
    &kp TAB          &kp Q            &kp W         &kp E         &kp R         &kp T            &kp Y            &kp U            &kp I            &kp O            &kp P            &kp LBKT         &kp RBKT         &kp BSLH         &kp PG_UP
    &kp CAPS         &kp A            &kp S         &kp D         &kp F         &kp G            &kp H            &kp J            &kp K            &kp L            &kp SCLN         &kp QUOT                          &kp ENTER        &kp PG_DN
    &kp LSHFT        &kp Z            &kp X         &kp C         &kp V         &kp B            &kp N            &kp M            &kp CMMA         &kp DOT          &kp FSLH         &kp RSHFT                         &kp UP           &mo 1
	&kp LCTRL        &kp LGUI         &kp LALT                    &kp SPACE                                                                                      &kp K_MENU                        &kp LEFT         &kp DOWN         &kp RIGHT
			>;
		};

		fn_layer {
// -----------------------------------------------------------------------------------------
//   | GRAVE | F1    | F2    | F3    | F4    | F5    | F6    | F7    | F8    | F9    | F10   | F11   | F12   | DEL    | TRANS  |
//   | BT_CLR|PROF 0 |PROF 1 |PROF 2 |PROF 3 |PROF 4 | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS  | TRANS  |
//   | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS |    BOOTLOADER  | TRANS  |
//   | SHIFT | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS |  TRANS | TRANS  |
//   | TRANS | TRANS | TRANS |                        TRANS |                          TRANS | TRANS | TRANS |  TRANS | TRANS  |

			bindings = <
    &kp GRAVE        &kp F1           &kp F2           &kp F3          &kp F4          &kp F5        &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &kp F11          &kp F12       &kp DEL         &trans
    &bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4  &trans           &trans           &trans           &trans           &trans           &kp UP           &trans        &trans          &trans
    &trans           &trans           &trans           &trans          &trans          &trans        &trans           &trans           &trans           &trans           &trans           &trans                         &bootloader     &trans
    &trans           &trans           &trans           &trans          &trans          &trans        &trans           &trans           &trans           &trans           &trans           &trans                         &trans          &trans
    &trans           &trans           &trans                           &trans                                                                                            &trans           &trans           &trans          &trans
			>;
		};

	};
};
